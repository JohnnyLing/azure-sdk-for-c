parameters:
  Artifacts: []
  ServiceDirectory: not-specified

jobs:
  - job: GenerateReleaseInfo
    pool:
        vmImage: windows-2019
    steps:
      - ${{ each artifact in parameters.Artifacts }}:
        - pwsh: >-
            New-Item
            -ItemType directory
            -Path $(Build.ArtifactStagingDirectory)
            -Name packages/${{ artifact.Name }}
          displayName: Create package info artifact location

        - pwsh: |
            $outputPath = Join-Path -Path $(Build.ArtifactStagingDirectory) packages/${{ artifact.Name }}/package-info.json
            $version = Get-Content -Path sdk/${{ parameters.ServiceDirectory }}/${{ artifact.Path }}/version.txt
            $outputObject = @{ version = $version.ToString(); name = '${{ artifact.Name }}' } | ConvertTo-Json

            Set-Content -Path $outputPath -Value $outputObject
          displayName: Create package info JSON file

        - pwsh: |
            $outputPath = Join-Path -Path $(Build.ArtifactStagingDirectory) packages/${{ artifact.Name }}
            $changelogPath = "sdk/${{ parameters.ServiceDirectory }}/${{ artifact.Path }}/CHANGELOG.md"

            if (Test-Path $changeLogPath) {
              Copy-Item sdk/${{ parameters.ServiceDirectory }}/${{ artifact.Path }}/CHANGELOG.md $outputPath
            } else {
              Write-Warning "$changeLogPath does not exist"
            }
          displayName: Copy CHANGELOG.md to package artifact

        - task: PublishPipelineArtifact@1
          inputs:
            artifactName: packages
            path: $(Build.ArtifactStagingDirectory)/packages